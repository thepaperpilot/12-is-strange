package thepaperpilot.strange.Levels;

import com.badlogic.gdx.Game;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.backends.lwjgl.LwjglApplication;
import com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;
import com.badlogic.gdx.math.Rectangle;
import com.badlogic.gdx.utils.Json;

import java.util.ArrayList;
import java.util.Arrays;

public class LevelGenerator {
    private final static Json json = new Json();

    public static void main(String[] args) {
        new LwjglApplication(new Game() {
            @Override
            public void create() {
                Level.LevelPrototype levelPrototype = new Level.LevelPrototype("first");

                ArrayList<Scene.ScenePrototype> scenes = new ArrayList<Scene.ScenePrototype>();
                Scene.ScenePrototype scene = new Scene.ScenePrototype("first", "bathroom", null);
                ArrayList<Entity.EntityPrototype> entities = new ArrayList<Entity.EntityPrototype>();
                Entity.EntityPrototype entity = new Entity.EntityPrototype(null, "CLOCK", 192, 96, true, null);
                entity.attributes.put("texture", "clock");
                entity.attributes.put("numFrames", "12");
                entity.attributes.put("time", "1");
                entities.add(entity);
                // door
                entity = new Entity.EntityPrototype("door", "IMAGE", 10, 32, true, null);
                entity.attributes.put("texture", "schoolDoor");
                ArrayList<Effect.EffectPrototype> effects = new ArrayList<Effect.EffectPrototype>();
                Effect.EffectPrototype effect = new Effect.EffectPrototype();
                effect.type = "DIALOGUE";
                effect.attributes.put("targetScene", "first");
                effect.attributes.put("dialogue", "door1");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // fireAlarm
                entity = new Entity.EntityPrototype("fireAlarm", "IMAGE", 210, 60, true, new String[]{"hammer"});
                entity.attributes.put("texture", "fireAlarmPuzzle");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "CHANGE_APPEARANCE";
                effect.attributes.put("targetScene", "first");
                effect.attributes.put("targetEntity", "fireAlarm");
                effect.attributes.put("texture", "fireAlarmPuzzleBroken");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "first");
                effect.attributes.put("message", "whoah! what was a gun doing in there?");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ITEM";
                effect.attributes.put("targetItem", "gun");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ITEM";
                effect.attributes.put("targetItem", "hammer");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "first");
                effect.attributes.put("message", "I need to find something to break this with");
                effects.add(effect);
                entity.failEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // soap
                entity = new Entity.EntityPrototype("soap", "IMAGE", 230, 16, true, null);
                entity.attributes.put("texture", "soapWorld");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ENTITY";
                effect.attributes.put("targetScene", "first");
                effect.attributes.put("targetEntity", "soap");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ITEM";
                effect.attributes.put("targetItem", "soap");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                scene.entities = Arrays.copyOf(entities.toArray(), entities.size(), Entity.EntityPrototype[].class);
                scenes.add(scene);

                scene = new Scene.ScenePrototype("second", "outside", "first");
                entities = new ArrayList<Entity.EntityPrototype>();
                entity = new Entity.EntityPrototype(null, "CLOCK", 148, 55, true, null);
                entity.attributes.put("texture", "clock");
                entity.attributes.put("numFrames", "12");
                entity.attributes.put("time", "2");
                entities.add(entity);
                // cat
                entity = new Entity.EntityPrototype("cat", "ANIMATION", 81, 10, true, new String[]{"cat food"});
                entity.attributes.put("texture", "catIdle");
                entity.attributes.put("numFrames", "14");
                entity.attributes.put("speed", Float.toString(1 / 6f));
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "CHANGE_APPEARANCE";
                effect.attributes.put("targetScene", "second");
                effect.attributes.put("targetEntity", "cat");
                effect.attributes.put("texture", "catEating");
                effect.attributes.put("numFrames", "2");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "second");
                effect.attributes.put("message", "aww. it looks so happy now!");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ENTITY";
                effect.attributes.put("targetScene", "fourth");
                effect.attributes.put("targetEntity", "sugar");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "CHANGE_APPEARANCE";
                effect.attributes.put("targetScene", "fourth");
                effect.attributes.put("targetEntity", "bird");
                effect.attributes.put("type", "ANIMATION");
                effect.attributes.put("texture", "blueJayIdle");
                effect.attributes.put("numFrames", "14");
                effect.attributes.put("speed", Float.toString(1 / 6f));
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ITEM";
                effect.attributes.put("targetItem", "cat food");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "second");
                effect.attributes.put("message", "This cat looks bored. I hear cats hunt birds when they're bored.");
                effects.add(effect);
                entity.failEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "second");
                effect.attributes.put("message", "aww. it looks so happy now!");
                effects.add(effect);
                entity.doneEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // dogBone
                entity = new Entity.EntityPrototype("dogBone", "IMAGE", 200, 14, true, null);
                entity.attributes.put("texture", "dogBoneWorld");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ENTITY";
                effect.attributes.put("targetScene", "second");
                effect.attributes.put("targetEntity", "dogBone");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ITEM";
                effect.attributes.put("targetItem", "dog bone");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                scene.entities = Arrays.copyOf(entities.toArray(), entities.size(), Entity.EntityPrototype[].class);
                scenes.add(scene);

                scene = new Scene.ScenePrototype("third", "school", "first");
                entities = new ArrayList<Entity.EntityPrototype>();
                entity = new Entity.EntityPrototype(null, "CLOCK", 192, 96, true, null);
                entity.attributes.put("texture", "clock");
                entity.attributes.put("numFrames", "12");
                entity.attributes.put("time", "3");
                entities.add(entity);
                // door
                entity = new Entity.EntityPrototype("door", "IMAGE", 48, 16, true, new String[]{"keys"});
                entity.attributes.put("texture", "schoolDoor");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "CHANGE_SCREEN";
                effect.attributes.put("targetScene", "fourth");
                effects.add(effect);
                entity.doneEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ITEM";
                effect.attributes.put("targetItem", "keys");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "third");
                effect.attributes.put("message", "the door unlocked!");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "third");
                effect.attributes.put("message", "it's locked");
                effects.add(effect);
                entity.failEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // alyssa
                entity = new Entity.EntityPrototype("alyssa", "IMAGE", 192, 14, true, new String[]{"soap"});
                entity.attributes.put("texture", "AlyssaSoapPuzzle");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "third");
                effect.attributes.put("message", "thank you alyssa!");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ITEM";
                effect.attributes.put("targetItem", "keys");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ITEM";
                effect.attributes.put("targetItem", "soap");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "third");
                effect.attributes.put("message", "I already have her the soap. Wasn't the tutorial enough?");
                effects.add(effect);
                entity.doneEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "DIALOGUE";
                effect.attributes.put("targetScene", "third");
                effect.attributes.put("dialogue", "Alyssa1");
                effects.add(effect);
                entity.failEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // soda
                entity = new Entity.EntityPrototype("soda", "IMAGE", 80, 16, true, null);
                entity.attributes.put("texture", "sodaWorld");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ENTITY";
                effect.attributes.put("targetScene", "third");
                effect.attributes.put("targetEntity", "soda");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ITEM";
                effect.attributes.put("targetItem", "soda");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                scene.entities = Arrays.copyOf(entities.toArray(), entities.size(), Entity.EntityPrototype[].class);
                scenes.add(scene);

                scene = new Scene.ScenePrototype("fourth", "outside", "third");
                scene.obstacles.put("dog", new Rectangle(160, 0, 16, 144));
                entities = new ArrayList<Entity.EntityPrototype>();
                entity = new Entity.EntityPrototype(null, "CLOCK", 148, 55, true, null);
                entity.attributes.put("texture", "clock");
                entity.attributes.put("numFrames", "12");
                entity.attributes.put("time", "4");
                entities.add(entity);
                // tirestack
                entity = new Entity.EntityPrototype("tirestack", "IMAGE", 230, 13, true, null);
                entity.attributes.put("texture", "tirestack");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "CHANGE_SCREEN";
                effect.attributes.put("targetScene", "fifth");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // stairs
                entity = new Entity.EntityPrototype("stairs", "IMAGE", 0, 7, true, null);
                entity.attributes.put("texture", "stairs");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "CHANGE_SCREEN";
                effect.attributes.put("targetScene", "sixth");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // dog1
                entity = new Entity.EntityPrototype("dog1", "ANIMATION", 160, 13, true, new String[]{"dog bone"});
                entity.attributes.put("texture", "dogIdle");
                entity.attributes.put("numFrames", "14");
                entity.attributes.put("speed", Float.toString(1 / 6f));
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "CHANGE_APPEARANCE";
                effect.attributes.put("targetScene", "fourth");
                effect.attributes.put("targetEntity", "dog1");
                effect.attributes.put("texture", "dogHappy");
                effect.attributes.put("numFrames", "2");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "fourth");
                effect.attributes.put("message", "look how cute it is!");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_BARRIER";
                effect.attributes.put("targetScene", "fourth");
                effect.attributes.put("targetObstacle", "dog");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ITEM";
                effect.attributes.put("targetItem", "dog bone");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "fourth");
                effect.attributes.put("message", "This dog won't let me through. It looks hungry");
                effects.add(effect);
                entity.failEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "fourth");
                effect.attributes.put("message", "The dog is much happier now that it has a bone");
                effects.add(effect);
                entity.doneEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // bird
                entity = new Entity.EntityPrototype("bird", "IMAGE", 73, 10, true, null);
                entity.attributes.put("texture", "blueJayDead");
                entities.add(entity);
                // cat food
                entity = new Entity.EntityPrototype("cat food", "IMAGE", 170, 13, true, null);
                entity.attributes.put("texture", "catFoodWorld");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ENTITY";
                effect.attributes.put("targetScene", "fourth");
                effect.attributes.put("targetEntity", "cat food");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ITEM";
                effect.attributes.put("targetItem", "cat food");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // weed killer
                entity = new Entity.EntityPrototype("weed killer", "IMAGE", 21, 7, true, null);
                entity.attributes.put("texture", "weedKillerWorld");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ENTITY";
                effect.attributes.put("targetScene", "fourth");
                effect.attributes.put("targetEntity", "weed killer");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ITEM";
                effect.attributes.put("targetItem", "weed killer");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // sugar
                entity = new Entity.EntityPrototype("sugar", "IMAGE", 120, 10, false, null);
                entity.attributes.put("texture", "sugarWorld");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ENTITY";
                effect.attributes.put("targetScene", "fourth");
                effect.attributes.put("targetEntity", "sugar");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ITEM";
                effect.attributes.put("targetItem", "sugar");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                scene.entities = Arrays.copyOf(entities.toArray(), entities.size(), Entity.EntityPrototype[].class);
                scenes.add(scene);

                scene = new Scene.ScenePrototype("fifth", "junkyard", "fourth");
                entities = new ArrayList<Entity.EntityPrototype>();
                /* There isn't a good spot for a clock on the junkyard map
                entity = new Entity.EntityPrototype(null, "CLOCK", 148, 55, true, null);
                entity.attributes.put("texture", "clock");
                entity.attributes.put("numFrames", "12");
                entity.attributes.put("time", "5");
                entities.add(entity); */
                // usb
                entity = new Entity.EntityPrototype("usb", "IMAGE", 80, 16, true, null);
                entity.attributes.put("texture", "usbWorld");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ENTITY";
                effect.attributes.put("targetScene", "fifth");
                effect.attributes.put("targetEntity", "usb");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ITEM";
                effect.attributes.put("targetItem", "usb");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // duct tape
                entity = new Entity.EntityPrototype("duct tape", "IMAGE", 40, 16, true, null);
                entity.attributes.put("texture", "ductTapeWorld");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ENTITY";
                effect.attributes.put("targetScene", "fifth");
                effect.attributes.put("targetEntity", "duct tape");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ITEM";
                effect.attributes.put("targetItem", "duct tape");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // car
                entity = new Entity.EntityPrototype("car", "IMAGE", 80, 16, true, new String[]{"gun", "bottles"});
                entity.attributes.put("texture", "carPuzzle");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "CUTSCENE";
                effect.attributes.put("targetScene", "fifth");
                effect.attributes.put("cutscene", "junkyard");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "fifth");
                effect.attributes.put("message", "I should use this car to break some bottles. I'll need some bottles and a gun");
                effects.add(effect);
                entity.failEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // bottles
                entity = new Entity.EntityPrototype("bottles", "IMAGE", 140, 16, false, null);
                entity.attributes.put("texture", "bottlesWorld");
                entities.add(entity);
                scene.entities = Arrays.copyOf(entities.toArray(), entities.size(), Entity.EntityPrototype[].class);
                scenes.add(scene);

                scene = new Scene.ScenePrototype("sixth", "school", "fourth");
                scene.obstacles.put("crowd", new Rectangle(190, 14, 50, 50));
                entities = new ArrayList<Entity.EntityPrototype>();
                entity = new Entity.EntityPrototype(null, "CLOCK", 192, 96, true, null);
                entity.attributes.put("texture", "clock");
                entity.attributes.put("numFrames", "12");
                entity.attributes.put("time", "6");
                entities.add(entity);
                // door
                entity = new Entity.EntityPrototype("door", "IMAGE", 48, 16, true, new String[]{"make-shift bomb"});
                entity.attributes.put("texture", "schoolDoor");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "CHANGE_SCREEN";
                effect.attributes.put("targetScene", "office");
                effects.add(effect);
                entity.doneEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ITEM";
                effect.attributes.put("targetItem", "make-shift bomb");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "sixth");
                effect.attributes.put("message", "I sure hope no one heard that");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "PLAY_SOUND";
                effect.attributes.put("sound", "explosion");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ENTITY";
                effect.attributes.put("targetScene", "sixth");
                effect.attributes.put("targetEntity", "explosion");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "CHANGE_APPEARANCE";
                effect.attributes.put("targetScene", "sixth");
                effect.attributes.put("targetEntity", "door");
                effect.attributes.put("texture", "breakableDoorPuzzle");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "sixth");
                effect.attributes.put("message", "it's locked. I think I can blow it open\nusing some sugar, weed killer, duct tape, and a soda can");
                effects.add(effect);
                entity.failEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // door2
                entity = new Entity.EntityPrototype("door2", "IMAGE", 192, 16, true, null);
                entity.attributes.put("texture", "schoolDoor");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "CHANGE_SCREEN";
                effect.attributes.put("targetScene", "seventh");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                // crowd
                entity = new Entity.EntityPrototype("crowd", "IMAGE", 180, 14, true, new String[]{"camera"});
                entity.attributes.put("texture", "crowdCameraPuzzle");
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ENTITY";
                effect.attributes.put("targetScene", "sixth");
                effect.attributes.put("targetEntity", "door2");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "ADD_ITEM";
                effect.attributes.put("targetItem", "photo");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_ITEM";
                effect.attributes.put("targetItem", "camera");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "REMOVE_BARRIER";
                effect.attributes.put("targetScene", "sixth");
                effect.attributes.put("targetObstacle", "crowd");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "MOVE_ENTITY";
                effect.attributes.put("targetScene", "sixth");
                effect.attributes.put("targetEntity", "crowd");
                effect.attributes.put("newX", "250");
                effect.attributes.put("newY", "14");
                effect.attributes.put("time", "4");
                effects.add(effect);
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "sixth");
                effect.attributes.put("message", "they're going away. Must be camera shy");
                effects.add(effect);
                entity.successEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                effects = new ArrayList<Effect.EffectPrototype>();
                effect = new Effect.EffectPrototype();
                effect.type = "SAY";
                effect.attributes.put("targetScene", "sixth");
                effect.attributes.put("message", "This crowd of people would make a great shot");
                effects.add(effect);
                entity.failEffects = Arrays.copyOf(effects.toArray(), effects.size(), Effect.EffectPrototype[].class);
                entities.add(entity);
                entity = new Entity.EntityPrototype("explosion", "ANIMATION", 48, 24, false, null);
                entity.attributes.put("texture", "explosion");
                entity.attributes.put("numFrames", "4");
                entity.attributes.put("loop", "false");
                scene.entities = Arrays.copyOf(entities.toArray(), entities.size(), Entity.EntityPrototype[].class);
                scenes.add(scene);

                levelPrototype.scenes = Arrays.copyOf(scenes.toArray(), scenes.size(), Scene.ScenePrototype[].class);

                ArrayList<Item.ItemPrototype> items = new ArrayList<Item.ItemPrototype>();
                items.add(new Item.ItemPrototype("alcohol", "alcohol"));
                items.add(new Item.ItemPrototype("bottles", "bottles"));
                items.add(new Item.ItemPrototype("camera", "camera"));
                items.add(new Item.ItemPrototype("cat food", "catFood"));
                items.add(new Item.ItemPrototype("dog bone", "dogBone"));
                items.add(new Item.ItemPrototype("duct tape", "ductTape"));
                items.add(new Item.ItemPrototype("files", "files"));
                items.add(new Item.ItemPrototype("fire extinguisher", "fireExtinguish"));
                items.add(new Item.ItemPrototype("fortune cookie code", "fortuneCookieCode"));
                items.add(new Item.ItemPrototype("fortune cookie", "fortuneCookie"));
                items.add(new Item.ItemPrototype("gun", "gun"));
                items.add(new Item.ItemPrototype("hammer", "hammer"));
                items.add(new Item.ItemPrototype("keys", "keys"));
                items.add(new Item.ItemPrototype("make-shift bomb", "makeShiftBomb"));
                items.add(new Item.ItemPrototype("notebook", "notebook"));
                items.add(new Item.ItemPrototype("phone", "phone"));
                items.add(new Item.ItemPrototype("soap", "soap"));
                items.add(new Item.ItemPrototype("soda", "soda"));
                items.add(new Item.ItemPrototype("sugar", "sugar"));
                items.add(new Item.ItemPrototype("usb", "usb"));
                items.add(new Item.ItemPrototype("weed killer", "weedKiller"));
                levelPrototype.items = Arrays.copyOf(items.toArray(), items.size(), Item.ItemPrototype[].class);

                ArrayList<Item.CombinationPrototype> combinations = new ArrayList<Item.CombinationPrototype>();
                // make-shift bomb
                Item.CombinationPrototype combination = new Item.CombinationPrototype();
                combination.ingredients = new String[]{"duct tape", "soda", "sugar", "weed killer"};
                combination.result = "make-shift bomb";
                combinations.add(combination);
                // fortune cookie code
                combination = new Item.CombinationPrototype();
                combination.ingredients = new String[]{"fortune cookie"};
                combination.result = "fortune cookie code";
                combinations.add(combination);
                levelPrototype.combinations = Arrays.copyOf(combinations.toArray(), combinations.size(), Item.CombinationPrototype[].class);

                String fileName = "first.json";
                String output = json.prettyPrint(levelPrototype);
                System.out.println(Gdx.files.getExternalStoragePath() + fileName);
                System.out.println(output);
                Gdx.files.external(fileName).writeString(output, false);

                Gdx.app.exit();
            }
        }, new LwjglApplicationConfiguration());
    }
}
